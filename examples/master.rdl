newtype NonEmpty (~A : Type) := NNil ~A | NCons ~A (NonEmpty ~A);;

fix f := let x := f x in x;;

map f (NNil x) := NNil (f x);;
map f (NCons x r) := NCons (f x) (map f r);;

fromList := fix ( \rec l -> match l with
  | (Cons x Nil) -> NNil x
  | (Cons x r) -> NCons x (rec r)
);;

fac := fix (\ rec n -> if eqInt n 0 then 1 else mulInt n (rec (minusInt n 1)));;

main := fromList [1,2,3,4,5];;