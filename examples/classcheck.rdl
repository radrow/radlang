

interface Monoid (~M : Type) {
  zero : ~M;;
  plus : ~M -> ~M -> ~M;;
};;

impl Int for Monoid {
  zero := id 0;;
  plus a b := if plus True True then 1 else 2;;
};;

impl Bool for Monoid {
  zero := False;;
  plus True True := False;;
  plus _ _ := False;;
};;

impl ~A is Monoid | Option ~A for Monoid {
  zero := Some zero;;
  plus (Some a) (Some b) := Some (plus a b);;
  plus _ _ := None;;
};;

f a := plus a a;;


main := if f True then f 0 else f 2;;