
reverse := fix (\rec acc l -> match l with
 | (Cons a b) -> rec (Cons a acc) b
 | Nil -> acc
 );;

map _ Nil := Nil;;
map f (Cons h t) := Cons (f h) (map f t);;

fib := let
  kek : Int
  | goo (Pair a b) num :=
     if eqInt num 0
     then b
     else goo (Pair b (plusInt a b)) (minusInt num 1)
  in goo (Pair 0 1)
;;

main := fib 5;;